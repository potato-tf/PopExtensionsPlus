#base robot_giant.pop
#base robot_standard.pop

// This is an example mission with vscript and popextensions
// Functions provided by popextensions are defined at the end of the file
WaveSchedule
{

	StartingCurrency		1200
	RespawnWaveTime 		2
	CanBotsAttackWhileInSpawnRoom 0

	Wave
	{
		// Add or replace existing InitWaveOutput with code below
		InitWaveOutput
		{
			Target gamerules // gamerules or tf_gamerules, depending on the map
			Action RunScriptCode
			Param "
				// The original InitWaveOutput trigger, change if necessary
				EntFire(`wave_init_relay`, `Trigger`)

				// Load popextensions script
				IncludeScript(`popextensions`)

				//load popextensions tags script
				IncludeScript(`popextensions_tags`)

				//load general mission attributes
				IncludeScript(`popextensions_missionattributes`)

				// If you are hitting the 4096 character limit inside this script, it would be required to put hooks into separate file
				// IncludeScript(`mypophooks`)
				// Add event hooks for bots with specifed Tag.
				AddRobotTag(`abc`, {
					// Called when the robot is spawned
					OnSpawn = function(bot, tag) {
						ClientPrint(null, 2, `OnSpawn`)
						bot.KeyValueFromString(`rendercolor`, `0 255 0`)

						// Put a barrel prop on bots head
						CreatePlayerWearable(bot, `models/props_farm/wooden_barrel.mdl`, false, `head`)
					},
					// Called when the robot is killed
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#mvm_tank_destroyed_by_players:~:text=they%20changed%20to-,player_death,-Note%3A%20When
					// Params may be null if the bot was forcefully changed to spectator team
					OnDeath = function(bot, params) {
						ClientPrint(null, 2, `OnDeath`)
						if (params != null) {
							PrintTable(params)
						}
						ClientPrint(null, 2, `Restore color`)
						// Restore colors back to normal as necessary
						bot.KeyValueFromString(`rendercolor`, `255 255 255`)
					},
					// Called when the robot is kills someone
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#mvm_tank_destroyed_by_players:~:text=they%20changed%20to-,player_death,-Note%3A%20When
					OnKill = function(bot, params) {
						ClientPrint(null, 2, `OnKill`)
						PrintTable(params)
					},
					// Called when the robot takes damage
					// Non const prefixed params when altered will affect the damage taken
					// Params as in https://developer.valvesoftware.com/wiki/List_of_TF2_Script_Functions#:~:text=Description-,const_entity,-handle
					OnTakeDamage = function(bot, params) {
						ClientPrint(null, 2, `OnTakeDamage`)
						PrintTable(params)
					},
					// Called when the robot takes damage, after the damage is dealt
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#player_hurt:~:text=type-,player_hurt,-Note%3A%20When
					OnTakeDamagePost = function(bot, params) {
						ClientPrint(null, 2, `OnTakeDamagePost`)
						PrintTable(params)
					},
					// Called when the robot deals damage
					// Non const prefixed params when altered will affect the damage taken
					// Params as in https://developer.valvesoftware.com/wiki/List_of_TF2_Script_Functions#:~:text=Description-,const_entity,-handle
					OnDealDamage = function(bot, params) {
						ClientPrint(null, 2, `OnDealDamage`)
						PrintTable(params)
					},
					// Called when the robot deals damage, after the damage is dealt
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#player_hurt:~:text=type-,player_hurt,-Note%3A%20When
					OnDealDamagePost = function(bot, params) {
						ClientPrint(null, 2, `OnDealDamagePost`)
						PrintTable(params)
					},
				})
			"
		}
		StartWaveOutput
		{
			Target wave_start_relay
			Action Trigger
		}
		DoneOutput
		{
			Target wave_finished_relay
			Action trigger
		}
		WaveSpawn
		{

			Name "Wave1"
			Where spawnbot
			TotalCount 19
			MaxActive 19
			SpawnCount 19
			WaitBeforeStarting 3
			WaitBetweenSpawns 5
			TotalCurrency 200
			TFBot
			{
				Tag "popext_addcond|32|10"
				Tag "popext_usehumanmodel"
				Tag "popext_alwaysglow"
				Tag "popext_usebestweapon"
				Tag "popext_giveweapon|tf_weapon_shotgun_soldier|425" //family business
				Class Soldier
				WeaponRestrictions SecondaryOnly
			}
		}
	}
	Wave
	{
		// Add or replace existing InitWaveOutput with code below
		InitWaveOutput
		{
			Target gamerules // gamerules or tf_gamerules, depending on the map
			Action RunScriptCode
			Param "
				// The original InitWaveOutput trigger, change if necessary
				EntFire(`wave_init_relay`, `Trigger`)

				// Load popextensions script
				IncludeScript(`popextensions`)

				// ALERT! The function below will crash linux servers, remove if the mission is played on them
				// Add custom tank icon, uses crit outline and white background
				AddCustomTankIcon(`tank_sticky_hellmet`, 3, true, false, false, false)

				// Add event hooks for tanks with specifed Name, also supports wildcard suffix
				AddTankName(`abc*`, {
					// Use custom tank icon
					Icon = { name = `tank_sticky_hellmet`, isCrit = true, isBoss = false},

					// Use custom tank model, can be either a string or a table of strings
					// TankModel = `models/bots/boss_bot/boss_blimp.mdl`,
					TankModel = {
						Default = `models/bots/boss_bot/boss_blimp.mdl`,
						Damage1 = `models/bots/boss_bot/boss_blimp_damage1.mdl`,
						Damage2 = `models/bots/boss_bot/boss_blimp_damage2.mdl`,
						Damage3 = `models/bots/boss_bot/boss_blimp_damage3.mdl`,
						LeftTrack = `models/bots/boss_bot/tankred_track_l.mdl`,
						RightTrack = `models/bots/boss_bot/tankred_track_r.mdl`,
						Bomb = `models/bots/boss_bot/bombblue_mechanism.mdl`,
					}
					DisableTracks = true, // Disable track models
					DisableBomb = true, // Disable bomb model
					// Called when the tank is spawned
					OnSpawn = function(tank, name) {
						// Create a prop on top of the tank
						local prop = SpawnEntityFromTable(`prop_dynamic`, {model = `models/props_badlands/barrel01.mdl`, origin = `0 0 200`})

						// Create an ignite trigger
						local trigger = SpawnEntityFromTable(`trigger_ignite`, {origin = `0 0 100`, spawnflags = `1`})
						SetupTriggerBounds(trigger, Vector(-200,-200,-200), Vector(200,200,200))
						SetParentLocalOrigin([prop, trigger], tank)

						ClientPrint(null, 2, `OnSpawnTank`)
						tank.KeyValueFromString(`rendercolor`, `255 0 0`)
					},
					// Called when the tank is destroyed
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#player_hurt:~:text=level-,npc_hurt,-Name%3A
					OnDeath = function(tank, params) {
						ClientPrint(null, 2, `OnDeathTank`)
						PrintTable(params)
					},
					// Called when the tank takes damage
					// Non const prefixed params when altered will affect the damage taken
					// Params as in https://developer.valvesoftware.com/wiki/List_of_TF2_Script_Functions#:~:text=Description-,const_entity,-handle
					OnTakeDamage = function(tank, params) {
						ClientPrint(null, 2, `OnTakeDamageTank`)
						PrintTable(params)
					},
					// Called when the tank takes damage, after the damage is dealt
					// Params as in https://wiki.alliedmods.net/Team_Fortress_2_Events#player_hurt:~:text=level-,npc_hurt,-Name%3A
					OnTakeDamagePost = function(tank, params) {
						ClientPrint(null, 2, `OnTakeDamagePostTank`)
						PrintTable(params)
					},
				})
			"
		}

		WaveSpawn
		{
			Name "Wave2"
			TotalCount 3
			TotalCurrency 0

			FirstSpawnOutput
			{
				Target boss_spawn_relay
				Action Trigger
			}

			Tank
			{
				Health 100
				Speed 75
				Name "abc"
				StartingPathTrackNode "boss_path_a1"

				OnKilledOutput
				{
					Target boss_dead_relay
					Action Trigger
				}

				OnBombDroppedOutput
				{
					Target boss_deploy_relay
					Action Trigger
				}
			}
		}
	}
}


// Functions provided by popextensions:

// Sets parent immediately in a dirty way. Does not retain absolute origin, retains local origin instead
// child parameter may also be an array of entities
// void SetParentLocalOrigin(handle|array child, handle parent, string attachment = null)

// Make a wearable prop that is attached to the player. The wearable is automatically removed when the owner is killed or respawned
// handle CreatePlayerWearable(handle player, string model, bool bonemerge = true, string attachment = null, bool autoDestroy = true)

// Setup collision bounds of a trigger entity
// handle SetupTriggerBounds(handle trigger, Vector mins = null, Vector maxs = null)

// Prints a table to client console
// void PrintTable(table|array table)

// Adds hooks to robots with specified Tag
// void AddRobotTag(string tag, table hooks)

// Adds hooks to tanks with specified Name. Wildcard * suffix is supported
// void AddTankName(string name, table hooks)

// ALERT! Functions that change wavebar icons will crash linux servers!
// Add custom tank icon to the wavebar, should be called in WaveInitOutput
// void AddCustomTankIcon(string name, int count, bool isCrit = false, bool isBoss = true, bool isSupport = false, bool isSupportLimited = false)

// Add custom icon to the wavebar, should be called in WaveInitOutput
// void AddCustomIcon(string name, int count, bool isCrit = false, bool isBoss = false, bool isSupport = false, bool isSupportLimited = false)

// If you want to use IncrementWaveIconSpawnCount functions to add icons to the wavebar, use this function
// void SetWaveIconsFunction(function func)

// Flags for use in wavebar functions below. Joinable with | operator
// MVM_CLASS_FLAG_NONE 				0;
// MVM_CLASS_FLAG_NORMAL 			1 << 0; // Non support or mission icon
// MVM_CLASS_FLAG_SUPPORT 			1 << 1; // Support icon flag. Mission icon does not have this flag
// MVM_CLASS_FLAG_MISSION 			1 << 2; // Mission icon flag. Support icon does not have this flag
// MVM_CLASS_FLAG_MINIBOSS 			1 << 3; // Giant icon flag. Support and mission icons do not display red background when set
// MVM_CLASS_FLAG_ALWAYSCRIT 		1 << 4; // Crit icon flag. Support and mission icons do not display crit outline when set
// MVM_CLASS_FLAG_SUPPORT_LIMITED 	1 << 5; // Support limited flag. Game uses it together with support flag

// Get wavebar spawn count of an icon with specified name and flags
// int GetWaveIconSpawnCount(string name, int flags)

// Set wavebar spawn count of an icon with specified name and flags
// If count is set to 0, removes the icon from the wavebar
// Can be used to put custom icons on a wavebar
// void SetWaveIconSpawnCount(string name, int flags, int count = 1, bool changeMaxEnemyCount = true)

// Increment wavebar spawn count of an icon with specified name and flags
// Can be used to put custom icons on a wavebar
// void IncrementWaveIconSpawnCount(string name, int flags, int count = 1, bool changeMaxEnemyCount = true)

// Increment wavebar spawn count of an icon with specified name and flags
// Use it to decrement the spawn count when the enemy is killed. Should not be used for support type icons
// void DecrementWaveIconSpawnCount(string name, int flags, int count = 1, bool changeMaxEnemyCount = false)

// Used for mission and support limited bots to display them on a wavebar during the wave, set by the game automatically when an enemy with this icon spawn
// void SetWaveIconActive(string name, int flags, bool active)

// Used for mission and support limited bots to display them on a wavebar during the wave, set by the game automatically when an enemy with this icon spawn
// bool GetWaveIconActive(string name, int flags)
